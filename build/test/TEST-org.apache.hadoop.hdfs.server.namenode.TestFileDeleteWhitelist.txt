Testsuite: org.apache.hadoop.hdfs.server.namenode.TestFileDeleteWhitelist
Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 54.876 sec
------------- Standard Output ---------------
2011-08-09 20:43:24,337 WARN  conf.Configuration (Configuration.java:<clinit>(191)) - DEPRECATED: hadoop-site.xml found in the classpath. Usage of hadoop-site.xml is deprecated. Instead use core-site.xml, mapred-site.xml and hdfs-site.xml to override properties of core-default.xml, mapred-default.xml and hdfs-default.xml respectively
2011-08-09 20:43:24,609 INFO  util.GSet (BlocksMap.java:computeCapacity(342)) - VM type       = 64-bit
2011-08-09 20:43:24,612 INFO  util.GSet (BlocksMap.java:computeCapacity(343)) - 2% max memory = 9.89875 MB
2011-08-09 20:43:24,612 INFO  util.GSet (BlocksMap.java:computeCapacity(344)) - capacity      = 2^20 = 1048576 entries
2011-08-09 20:43:24,613 INFO  util.GSet (LightWeightGSet.java:<init>(79)) - recommended=1048576, actual=1048576
2011-08-09 20:43:24,645 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(521)) - fsOwner=jeff,jeff
2011-08-09 20:43:24,646 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(527)) - supergroup=supergroup
2011-08-09 20:43:24,647 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(528)) - isPermissionEnabled=true
2011-08-09 20:43:24,756 INFO  namenode.NameNode (FSDirectory.java:<init>(126)) - Caching file names occuring more than 10 times 
2011-08-09 20:43:24,832 INFO  common.Storage (FSImage.java:saveFSImage(1268)) - Image file of size 95 saved in 0 seconds.
2011-08-09 20:43:24,836 INFO  namenode.FSNamesystem (FSEditLog.java:<init>(157)) - Edit Log preallocate size for /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name1/current/edits is 1048576 bytes  and initial size of edits buffer is 524288 bytes. Max number of buffered transactions is 10000
2011-08-09 20:43:24,838 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(284)) - Preallocating Edit log, current size 0
2011-08-09 20:43:24,839 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(289)) - Edit log size is now 1049088 written 512 bytes  at offset 1048576
2011-08-09 20:43:24,839 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 5
2011-08-09 20:43:24,892 INFO  common.Storage (FSImage.java:format(1394)) - Storage directory /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name1 has been successfully formatted.
2011-08-09 20:43:24,896 INFO  common.Storage (FSImage.java:saveFSImage(1268)) - Image file of size 95 saved in 0 seconds.
2011-08-09 20:43:24,897 INFO  namenode.FSNamesystem (FSEditLog.java:<init>(157)) - Edit Log preallocate size for /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name2/current/edits is 1048576 bytes  and initial size of edits buffer is 524288 bytes. Max number of buffered transactions is 10000
2011-08-09 20:43:24,903 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(284)) - Preallocating Edit log, current size 0
2011-08-09 20:43:24,903 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(289)) - Edit log size is now 1049088 written 512 bytes  at offset 1048576
2011-08-09 20:43:24,904 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 5
2011-08-09 20:43:24,915 INFO  common.Storage (FSImage.java:format(1394)) - Storage directory /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name2 has been successfully formatted.
2011-08-09 20:43:24,939 INFO  jvm.JvmMetrics (JvmMetrics.java:init(71)) - Initializing JVM Metrics with processName=NameNode, sessionId=null
2011-08-09 20:43:25,009 INFO  metrics.NameNodeMetrics (NameNodeMetrics.java:<init>(145)) - Initializing NameNodeMeterics using context object:org.apache.hadoop.metrics.spi.NullContext
2011-08-09 20:43:25,010 INFO  util.GSet (BlocksMap.java:computeCapacity(342)) - VM type       = 64-bit
2011-08-09 20:43:25,010 INFO  util.GSet (BlocksMap.java:computeCapacity(343)) - 2% max memory = 9.89875 MB
2011-08-09 20:43:25,010 INFO  util.GSet (BlocksMap.java:computeCapacity(344)) - capacity      = 2^20 = 1048576 entries
2011-08-09 20:43:25,011 INFO  util.GSet (LightWeightGSet.java:<init>(79)) - recommended=1048576, actual=1048576
2011-08-09 20:43:25,084 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(521)) - fsOwner=jeff,jeff
2011-08-09 20:43:25,085 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(527)) - supergroup=supergroup
2011-08-09 20:43:25,085 INFO  namenode.FSNamesystem (FSNamesystem.java:setConfigurationParameters(528)) - isPermissionEnabled=true
2011-08-09 20:43:25,111 INFO  metrics.FSNamesystemMetrics (FSNamesystemMetrics.java:<init>(71)) - Initializing FSNamesystemMetrics using context object:org.apache.hadoop.metrics.spi.NullContext
2011-08-09 20:43:25,112 INFO  namenode.FSNamesystem (FSNamesystem.java:registerMBean(5940)) - Registered FSNamesystemStatusMBean
2011-08-09 20:43:25,121 INFO  namenode.NameNode (FSDirectory.java:<init>(126)) - Caching file names occuring more than 10 times 
2011-08-09 20:43:25,142 INFO  common.Storage (FSImage.java:loadFSImage(1034)) - Number of files = 1
2011-08-09 20:43:25,142 INFO  common.Storage (FSImage.java:loadFilesUnderConstruction(1499)) - Number of files under construction = 0
2011-08-09 20:43:25,143 INFO  common.Storage (FSImage.java:loadFSImage(1144)) - Image file of size 95 loaded in 0 seconds.
2011-08-09 20:43:25,145 INFO  common.Storage (FSEditLog.java:loadFSEdits(886)) - Edits file /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name1/current/edits of size 4 edits # 0 loaded in 0 seconds.
2011-08-09 20:43:25,146 INFO  namenode.FSNamesystem (FSEditLog.java:<init>(157)) - Edit Log preallocate size for /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name1/current/edits is 1048576 bytes  and initial size of edits buffer is 524288 bytes. Max number of buffered transactions is 10000
2011-08-09 20:43:25,147 INFO  namenode.FSNamesystem (FSEditLog.java:<init>(157)) - Edit Log preallocate size for /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name2/current/edits is 1048576 bytes  and initial size of edits buffer is 524288 bytes. Max number of buffered transactions is 10000
2011-08-09 20:43:25,148 INFO  namenode.NameCache (NameCache.java:initialized(143)) - initialized with 0 entries 0 lookups
2011-08-09 20:43:25,154 INFO  namenode.FSNamesystem (FSNamesystem.java:initialize(372)) - Finished loading FSImage in 71 msecs
2011-08-09 20:43:25,156 INFO  namenode.FSNamesystem (FSNamesystem.java:initializeReplQueues(5294)) - initializing replication queues
2011-08-09 20:43:25,165 INFO  namenode.FSNamesystem (FSNamesystem.java:processMisReplicatedBlocks(4047)) - Total number of blocks = 0
2011-08-09 20:43:25,166 INFO  namenode.FSNamesystem (FSNamesystem.java:processMisReplicatedBlocks(4048)) - Number of invalid blocks = 0
2011-08-09 20:43:25,166 INFO  namenode.FSNamesystem (FSNamesystem.java:processMisReplicatedBlocks(4049)) - Number of under-replicated blocks = 0
2011-08-09 20:43:25,167 INFO  namenode.FSNamesystem (FSNamesystem.java:processMisReplicatedBlocks(4050)) - Number of  over-replicated blocks = 0
2011-08-09 20:43:25,167 INFO  hdfs.StateChange (FSNamesystem.java:leave(5269)) - STATE* Leaving safe mode after 0 secs.
2011-08-09 20:43:25,193 INFO  ipc.Server (Server.java:run(307)) - Starting SocketReader
2011-08-09 20:43:25,197 INFO  metrics.RpcMetrics (RpcMetrics.java:<init>(59)) - Initializing RPC Metrics with hostName=NameNode, port=37807
2011-08-09 20:43:25,202 INFO  namenode.NameNode (NameNode.java:startServerForClientRequests(396)) - Namenode up at: localhost/127.0.0.1:37807
2011-08-09 20:43:25,203 INFO  ipc.Server (Server.java:run(581)) - IPC Server Responder: starting
2011-08-09 20:43:25,205 INFO  ipc.Server (Server.java:run(408)) - IPC Server listener on 37807: starting
2011-08-09 20:43:25,205 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 0 on 37807: starting
2011-08-09 20:43:25,206 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 1 on 37807: starting
2011-08-09 20:43:25,215 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 3 on 37807: starting
2011-08-09 20:43:25,215 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 2 on 37807: starting
2011-08-09 20:43:25,215 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 4 on 37807: starting
2011-08-09 20:43:25,216 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 5 on 37807: starting
2011-08-09 20:43:25,216 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 6 on 37807: starting
2011-08-09 20:43:25,217 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 7 on 37807: starting
2011-08-09 20:43:25,217 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 8 on 37807: starting
2011-08-09 20:43:25,226 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 9 on 37807: starting
2011-08-09 20:43:25,346 WARN  fs.Trash (Trash.java:<init>(232)) - The configured interval for checkpoint is 0 minutes. Using interval of 0 minutes that is used for deletion instead
2011-08-09 20:43:25,348 INFO  hdfs.StateChange (FSNamesystem.java:leave(5283)) - STATE* Network topology has 0 racks and 0 datanodes
2011-08-09 20:43:25,348 INFO  hdfs.StateChange (FSNamesystem.java:leave(5286)) - STATE* UnderReplicatedBlocks has 0 blocks
2011-08-09 20:43:25,348 INFO  namenode.FSNamesystem (FSNamesystem.java:initialize(388)) - Skip counting items in the file tree
2011-08-09 20:43:25,351 DEBUG namenode.FSNamesystem (PendingReplicationBlocks.java:pendingReplicationCheck(201)) - PendingReplicationMonitor checking Q
2011-08-09 20:43:25,356 INFO  util.HostsFileReader (HostsFileReader.java:refresh(80)) - Refreshing hosts (include/exclude) list
2011-08-09 20:43:25,428 INFO  mortbay.log (Slf4jLog.java:info(67)) - Logging to org.slf4j.impl.Log4jLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
2011-08-09 20:43:25,503 INFO  http.HttpServer (HttpServer.java:addGlobalFilter(297)) - Added global filtersafety (class=org.apache.hadoop.http.HttpServer$QuotingInputFilter)
2011-08-09 20:43:25,512 INFO  http.HttpServer (HttpServer.java:start(437)) - Port returned by webServer.getConnectors()[0].getLocalPort() before open() is -1. Opening the listener on 0
2011-08-09 20:43:25,513 INFO  http.HttpServer (HttpServer.java:start(442)) - listener.getLocalPort() returned 49472 webServer.getConnectors()[0].getLocalPort() returned 49472
2011-08-09 20:43:25,513 INFO  http.HttpServer (HttpServer.java:start(475)) - Jetty bound to port 49472
2011-08-09 20:43:25,513 INFO  mortbay.log (Slf4jLog.java:info(67)) - jetty-6.1.26
2011-08-09 20:43:26,015 INFO  mortbay.log (Slf4jLog.java:info(67)) - Started SelectChannelConnector@localhost:49472
2011-08-09 20:43:26,016 INFO  namenode.NameNode (NameNode.java:startHttpServer(329)) - Web-server up at: localhost:49472
Starting DataNode 0 with dfs.data.dir: /home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data1,/home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data2
2011-08-09 20:43:26,105 INFO  common.Storage (DataStorage.java:recoverTransitionRead(124)) - Storage directory /home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data1 is not formatted.
2011-08-09 20:43:26,105 INFO  common.Storage (DataStorage.java:recoverTransitionRead(125)) - Formatting ...
2011-08-09 20:43:26,123 INFO  common.Storage (DataStorage.java:recoverTransitionRead(124)) - Storage directory /home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data2 is not formatted.
2011-08-09 20:43:26,123 INFO  common.Storage (DataStorage.java:recoverTransitionRead(125)) - Formatting ...
2011-08-09 20:43:26,239 INFO  datanode.DataNode (FSDataset.java:registerMBean(1597)) - Registered FSDatasetStatusMBean
2011-08-09 20:43:26,243 INFO  datanode.DataNode (DataNode.java:startDataNode(327)) - Opened info server at 51078
2011-08-09 20:43:26,248 INFO  datanode.DataNode (DataXceiverServer.java:<init>(75)) - Balancing bandwith is 1048576 bytes/s
2011-08-09 20:43:26,254 INFO  http.HttpServer (HttpServer.java:addGlobalFilter(297)) - Added global filtersafety (class=org.apache.hadoop.http.HttpServer$QuotingInputFilter)
2011-08-09 20:43:26,257 INFO  http.HttpServer (HttpServer.java:start(437)) - Port returned by webServer.getConnectors()[0].getLocalPort() before open() is -1. Opening the listener on 0
2011-08-09 20:43:26,258 INFO  http.HttpServer (HttpServer.java:start(442)) - listener.getLocalPort() returned 46064 webServer.getConnectors()[0].getLocalPort() returned 46064
2011-08-09 20:43:26,258 INFO  http.HttpServer (HttpServer.java:start(475)) - Jetty bound to port 46064
2011-08-09 20:43:26,259 INFO  mortbay.log (Slf4jLog.java:info(67)) - jetty-6.1.26
2011-08-09 20:43:26,483 INFO  mortbay.log (Slf4jLog.java:info(67)) - Started SelectChannelConnector@localhost:46064
2011-08-09 20:43:26,485 INFO  jvm.JvmMetrics (JvmMetrics.java:init(66)) - Cannot initialize JVM Metrics with processName=DataNode, sessionId=null - already initialized
2011-08-09 20:43:26,518 INFO  metrics.RpcMetrics (RpcMetrics.java:<init>(59)) - Initializing RPC Metrics with hostName=DataNode, port=56201
2011-08-09 20:43:26,535 INFO  ipc.Server (Server.java:run(307)) - Starting SocketReader
2011-08-09 20:43:26,539 INFO  ipc.Server (Server.java:run(581)) - IPC Server Responder: starting
2011-08-09 20:43:26,542 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 0 on 56201: starting
2011-08-09 20:43:26,543 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 1 on 56201: starting
2011-08-09 20:43:26,543 INFO  datanode.DataNode (DataNode.java:startDataNode(418)) - dnRegistration = DatanodeRegistration(m3vm6.tuenti.local:51078, storageID=, infoPort=46064, ipcPort=56201)
2011-08-09 20:43:26,546 INFO  ipc.Server (Server.java:run(1044)) - IPC Server handler 2 on 56201: starting
2011-08-09 20:43:26,554 INFO  ipc.Server (Server.java:run(408)) - IPC Server listener on 56201: starting
2011-08-09 20:44:18,787 INFO  hdfs.StateChange (FSNamesystem.java:registerDatanode(2757)) - BLOCK* NameSystem.registerDatanode: node registration from 127.0.0.1:51078 storage DS-1460672559-10.0.62.238-51078-1312915458782
2011-08-09 20:44:18,791 DEBUG hdfs.StateChange (FSNamesystem.java:unprotectedAddDatanode(3584)) - BLOCK* NameSystem.unprotectedAddDatanode: node 127.0.0.1:51078 is added to datanodeMap.
2011-08-09 20:44:18,791 INFO  net.NetworkTopology (NetworkTopology.java:add(328)) - Adding a new node: /default-rack/127.0.0.1:51078
2011-08-09 20:44:18,800 INFO  datanode.DataNode (DataNode.java:register(592)) - New storage id DS-1460672559-10.0.62.238-51078-1312915458782 is assigned to data-node 127.0.0.1:51078
2011-08-09 20:44:18,801 INFO  datanode.DataNode (DataNode.java:run(1274)) - DatanodeRegistration(127.0.0.1:51078, storageID=DS-1460672559-10.0.62.238-51078-1312915458782, infoPort=46064, ipcPort=56201)In DataNode.run, data = FSDataset{dirpath='/home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data1/current,/home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data2/current'}
2011-08-09 20:44:18,802 INFO  datanode.DataNode (DataNode.java:offerService(756)) - using BLOCKREPORT_INTERVAL of 3600000msec Initial delay: 0msec
2011-08-09 20:44:18,833 INFO  datanode.DataNode (FSDataset.java:getBlockInfo(601)) - Finished generating block report for 2 volumes in 0 seconds
2011-08-09 20:44:18,839 DEBUG hdfs.StateChange (NameNode.java:blockReport(981)) - *BLOCK* NameNode.blockReport: from 127.0.0.1:51078 0 blocks
2011-08-09 20:44:18,840 DEBUG hdfs.StateChange (FSNamesystem.java:processReport(3679)) - BLOCK* NameSystem.processReport: from 127.0.0.1:51078 0 blocks
2011-08-09 20:44:18,840 INFO  hdfs.StateChange (FSNamesystem.java:processReport(3701)) - BLOCK* NameSystem.processReport: from 127.0.0.1:51078 0 blocks shortCircuit first report.
2011-08-09 20:44:18,843 INFO  datanode.DataNode (DataNode.java:offerService(839)) - BlockReport of 0 blocks got processed in 10 msecs
2011-08-09 20:44:18,844 INFO  datanode.DataNode (DataNode.java:offerService(864)) - Starting Periodic block scanner.
2011-08-09 20:44:18,845 INFO  datanode.DataNode (FSDataset.java:getBlockInfo(601)) - Finished generating block report for 2 volumes in 0 seconds
2011-08-09 20:44:18,863 DEBUG hdfs.StateChange (NameNode.java:create(502)) - *DIR* NameNode.create: file /foo/file1 for DFSClient_-211218380 at 127.0.0.1
2011-08-09 20:44:18,864 DEBUG hdfs.StateChange (FSNamesystem.java:startFileInternal(1449)) - DIR* NameSystem.startFile: src=/foo/file1, holder=DFSClient_-211218380, clientMachine=127.0.0.1, replication=1, overwrite=true, append=false
2011-08-09 20:44:18,865 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [10, 0, 0, 0, 0, 0, 0, 3, -23]
2011-08-09 20:44:18,866 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [10, 0, 0, 0, 0, 0, 0, 3, -23]
2011-08-09 20:44:18,868 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [3, 0, 0, 0, 3, 0, 4, 47, 102, 111, 111, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 1, 48, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -19]
2011-08-09 20:44:18,868 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [3, 0, 0, 0, 3, 0, 4, 47, 102, 111, 111, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 1, 48, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -19]
2011-08-09 20:44:18,868 DEBUG hdfs.StateChange (FSDirectory.java:mkdirs(1341)) - DIR* FSDirectory.mkdirs: created directory /foo
2011-08-09 20:44:18,870 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [0, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 4, 56, 49, 57, 50, 0, 0, 0, 0, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92, 0, 20, 68, 70, 83, 67, 108, 105, 101, 110, 116, 95, 45, 50, 49, 49, 50, 49, 56, 51, 56, 48, 0, 9, 49, 50, 55, 46, 48, 46, 48, 46, 49]
2011-08-09 20:44:18,870 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [0, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 4, 56, 49, 57, 50, 0, 0, 0, 0, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92, 0, 20, 68, 70, 83, 67, 108, 105, 101, 110, 116, 95, 45, 50, 49, 49, 50, 49, 56, 51, 56, 48, 0, 9, 49, 50, 55, 46, 48, 46, 48, 46, 49]
2011-08-09 20:44:18,870 DEBUG hdfs.StateChange (FSDirectory.java:addFile(243)) - DIR* FSDirectory.addFile: /foo/file1 is added to the file system
2011-08-09 20:44:18,872 DEBUG hdfs.StateChange (FSNamesystem.java:startFileInternal(1585)) - DIR* NameSystem.startFile: add /foo/file1 to namespace for DFSClient_-211218380
2011-08-09 20:44:18,872 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(284)) - Preallocating Edit log, current size 4
2011-08-09 20:44:18,872 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(289)) - Edit log size is now 1049092 written 512 bytes  at offset 1048580
2011-08-09 20:44:18,872 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 180
2011-08-09 20:44:18,876 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(284)) - Preallocating Edit log, current size 4
2011-08-09 20:44:18,876 DEBUG namenode.FSNamesystem (FSEditLog.java:preallocate(289)) - Edit log size is now 1049092 written 512 bytes  at offset 1048580
2011-08-09 20:44:18,876 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 180
2011-08-09 20:44:18,881 INFO  FSNamesystem.audit (FSNamesystem.java:logAuditEvent(136)) - ugi=jeff,jeff	ip=/127.0.0.1	cmd=create	src=/foo/file1	dst=null	perm=jeff:supergroup:rw-r--r--
2011-08-09 20:44:18,889 DEBUG hdfs.StateChange (NameNode.java:addBlock(558)) - *BLOCK* NameNode.addBlock: file /foo/file1 for DFSClient_-211218380
2011-08-09 20:44:18,890 DEBUG hdfs.StateChange (FSNamesystem.java:getAdditionalBlock(1700)) - BLOCK* NameSystem.getAdditionalBlock: file /foo/file1 for DFSClient_-211218380
2011-08-09 20:44:18,891 DEBUG hdfs.StateChange (FSDirectory.java:addBlock(356)) - DIR* FSDirectory.addFile: /foo/file1 with blk_-7143994813129296354_1001 block is added to the in-memory file system
2011-08-09 20:44:18,891 INFO  hdfs.StateChange (FSNamesystem.java:allocateBlock(1930)) - BLOCK* NameSystem.allocateBlock: /foo/file1. blk_-7143994813129296354_1001
2011-08-09 20:44:18,996 INFO  datanode.DataNode (DataXceiver.java:writeBlock(254)) - Receiving block blk_-7143994813129296354_1001 src: /127.0.0.1:49449 dest: /127.0.0.1:51078
2011-08-09 20:44:19,013 DEBUG hdfs.StateChange (NameNode.java:blockReceived(995)) - *BLOCK* NameNode.blockReceived: from 127.0.0.1:51078 1 blocks.
2011-08-09 20:44:19,013 INFO  DataNode.clienttrace (BlockReceiver.java:lastDataNodeRun(820)) - src: /127.0.0.1:49449, dest: /127.0.0.1:51078, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_-211218380, offset: 0, srvID: DS-1460672559-10.0.62.238-51078-1312915458782, blockid: blk_-7143994813129296354_1001, duration: 2532403
2011-08-09 20:44:19,014 INFO  datanode.DataNode (BlockReceiver.java:lastDataNodeRun(851)) - PacketResponder 0 for block blk_-7143994813129296354_1001 terminating
2011-08-09 20:44:19,014 DEBUG hdfs.StateChange (FSNamesystem.java:blockReceived(4414)) - BLOCK* NameSystem.blockReceived: blk_-7143994813129296354_1001 is received from 127.0.0.1:51078
2011-08-09 20:44:19,020 INFO  hdfs.StateChange (FSNamesystem.java:addStoredBlock(3893)) - BLOCK* NameSystem.addStoredBlock: blockMap updated: 127.0.0.1:51078 is added to blk_-7143994813129296354_1001 size 1024
2011-08-09 20:44:19,021 DEBUG hdfs.StateChange (NameNode.java:complete(588)) - *DIR* NameNode.complete: /foo/file1 for DFSClient_-211218380
2011-08-09 20:44:19,022 DEBUG hdfs.StateChange (FSNamesystem.java:completeFileInternal(1859)) - DIR* NameSystem.completeFile: /foo/file1 for DFSClient_-211218380
2011-08-09 20:44:19,023 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [9, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 50, 50, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 4, 56, 49, 57, 50, 0, 0, 0, 1, -100, -37, 110, -111, 102, 49, -10, 30, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, -23, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92]
2011-08-09 20:44:19,023 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [9, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 50, 50, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 56, 56, 54, 55, 0, 4, 56, 49, 57, 50, 0, 0, 0, 1, -100, -37, 110, -111, 102, 49, -10, 30, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, -23, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92]
2011-08-09 20:44:19,023 DEBUG hdfs.StateChange (FSDirectory.java:closeFile(396)) - DIR* FSDirectory.closeFile: /foo/file1 with 1 blocks is persisted to the file system
2011-08-09 20:44:19,023 INFO  hdfs.StateChange (FSNamesystem.java:completeFileInternal(1886)) - DIR* NameSystem.completeFile: file /foo/file1 is closed by DFSClient_-211218380
2011-08-09 20:44:19,025 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 107
2011-08-09 20:44:19,026 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 107
testFileCreationDeleteParent: Created file /foo/file1
2011-08-09 20:44:19,029 DEBUG hdfs.StateChange (NameNode.java:create(502)) - *DIR* NameNode.create: file /foo/file2 for DFSClient_-211218380 at 127.0.0.1
2011-08-09 20:44:19,030 DEBUG hdfs.StateChange (FSNamesystem.java:startFileInternal(1449)) - DIR* NameSystem.startFile: src=/foo/file2, holder=DFSClient_-211218380, clientMachine=127.0.0.1, replication=1, overwrite=true, append=false
2011-08-09 20:44:19,030 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [10, 0, 0, 0, 0, 0, 0, 3, -22]
2011-08-09 20:44:19,030 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [10, 0, 0, 0, 0, 0, 0, 3, -22]
2011-08-09 20:44:19,031 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [0, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 50, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 4, 56, 49, 57, 50, 0, 0, 0, 0, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92, 0, 20, 68, 70, 83, 67, 108, 105, 101, 110, 116, 95, 45, 50, 49, 49, 50, 49, 56, 51, 56, 48, 0, 9, 49, 50, 55, 46, 48, 46, 48, 46, 49]
2011-08-09 20:44:19,031 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [0, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 50, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 4, 56, 49, 57, 50, 0, 0, 0, 0, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92, 0, 20, 68, 70, 83, 67, 108, 105, 101, 110, 116, 95, 45, 50, 49, 49, 50, 49, 56, 51, 56, 48, 0, 9, 49, 50, 55, 46, 48, 46, 48, 46, 49]
2011-08-09 20:44:19,031 DEBUG hdfs.StateChange (FSDirectory.java:addFile(243)) - DIR* FSDirectory.addFile: /foo/file2 is added to the file system
2011-08-09 20:44:19,032 DEBUG hdfs.StateChange (FSNamesystem.java:startFileInternal(1585)) - DIR* NameSystem.startFile: add /foo/file2 to namespace for DFSClient_-211218380
2011-08-09 20:44:19,032 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 129
2011-08-09 20:44:19,033 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 129
2011-08-09 20:44:19,034 INFO  FSNamesystem.audit (FSNamesystem.java:logAuditEvent(136)) - ugi=jeff,jeff	ip=/127.0.0.1	cmd=create	src=/foo/file2	dst=null	perm=jeff:supergroup:rw-r--r--
2011-08-09 20:44:19,036 DEBUG hdfs.StateChange (NameNode.java:addBlock(558)) - *BLOCK* NameNode.addBlock: file /foo/file2 for DFSClient_-211218380
2011-08-09 20:44:19,036 DEBUG hdfs.StateChange (FSNamesystem.java:getAdditionalBlock(1700)) - BLOCK* NameSystem.getAdditionalBlock: file /foo/file2 for DFSClient_-211218380
2011-08-09 20:44:19,037 DEBUG hdfs.StateChange (FSDirectory.java:addBlock(356)) - DIR* FSDirectory.addFile: /foo/file2 with blk_-8126304916916525905_1002 block is added to the in-memory file system
2011-08-09 20:44:19,037 INFO  hdfs.StateChange (FSNamesystem.java:allocateBlock(1930)) - BLOCK* NameSystem.allocateBlock: /foo/file2. blk_-8126304916916525905_1002
2011-08-09 20:44:19,039 INFO  datanode.DataNode (DataXceiver.java:writeBlock(254)) - Receiving block blk_-8126304916916525905_1002 src: /127.0.0.1:49450 dest: /127.0.0.1:51078
2011-08-09 20:44:19,043 INFO  DataNode.clienttrace (BlockReceiver.java:lastDataNodeRun(820)) - src: /127.0.0.1:49450, dest: /127.0.0.1:51078, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_-211218380, offset: 0, srvID: DS-1460672559-10.0.62.238-51078-1312915458782, blockid: blk_-8126304916916525905_1002, duration: 2765213
2011-08-09 20:44:19,044 INFO  datanode.DataNode (BlockReceiver.java:lastDataNodeRun(851)) - PacketResponder 0 for block blk_-8126304916916525905_1002 terminating
2011-08-09 20:44:19,044 DEBUG hdfs.StateChange (NameNode.java:blockReceived(995)) - *BLOCK* NameNode.blockReceived: from 127.0.0.1:51078 1 blocks.
2011-08-09 20:44:19,045 DEBUG hdfs.StateChange (FSNamesystem.java:blockReceived(4414)) - BLOCK* NameSystem.blockReceived: blk_-8126304916916525905_1002 is received from 127.0.0.1:51078
2011-08-09 20:44:19,045 INFO  hdfs.StateChange (FSNamesystem.java:addStoredBlock(3893)) - BLOCK* NameSystem.addStoredBlock: blockMap updated: 127.0.0.1:51078 is added to blk_-8126304916916525905_1002 size 1024
2011-08-09 20:44:19,048 DEBUG hdfs.StateChange (NameNode.java:complete(588)) - *DIR* NameNode.complete: /foo/file2 for DFSClient_-211218380
2011-08-09 20:44:19,048 DEBUG hdfs.StateChange (FSNamesystem.java:completeFileInternal(1859)) - DIR* NameSystem.completeFile: /foo/file2 for DFSClient_-211218380
2011-08-09 20:44:19,048 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [9, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 50, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 52, 56, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 4, 56, 49, 57, 50, 0, 0, 0, 1, -113, 57, -112, -69, -86, -82, 36, -81, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, -22, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92]
2011-08-09 20:44:19,049 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [9, 0, 0, 0, 5, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 50, 0, 1, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 52, 56, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 51, 49, 0, 4, 56, 49, 57, 50, 0, 0, 0, 1, -113, 57, -112, -69, -86, -82, 36, -81, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, -22, 4, 106, 101, 102, 102, 10, 115, 117, 112, 101, 114, 103, 114, 111, 117, 112, 1, -92]
2011-08-09 20:44:19,049 DEBUG hdfs.StateChange (FSDirectory.java:closeFile(396)) - DIR* FSDirectory.closeFile: /foo/file2 with 1 blocks is persisted to the file system
2011-08-09 20:44:19,049 INFO  hdfs.StateChange (FSNamesystem.java:completeFileInternal(1886)) - DIR* NameSystem.completeFile: file /foo/file2 is closed by DFSClient_-211218380
2011-08-09 20:44:19,049 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 107
2011-08-09 20:44:19,050 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 107
testFileCreationDeleteParent: Created file /foo/file2
2011-08-09 20:44:19,052 WARN  hdfs.DFSClient (DFSClient.java:deleteUsingTrash(323)) - File /foo/file1 is being deleted only through Trash org.apache.hadoop.fs.FsShell.delete because all deletes must go through Trash.
2011-08-09 20:44:19,064 DEBUG hdfs.StateChange (NameNode.java:delete(671)) - *DIR* Namenode.delete: src=/foo/file1, recursive=true
2011-08-09 20:44:19,065 DEBUG hdfs.StateChange (FSNamesystem.java:deleteInternal(2225)) - DIR* NameSystem.delete: /foo/file1
2011-08-09 20:44:19,065 DEBUG hdfs.StateChange (FSDirectory.java:delete(766)) - DIR* FSDirectory.delete: /foo/file1
2011-08-09 20:44:19,068 DEBUG hdfs.StateChange (FSDirectory.java:unprotectedDelete(856)) - DIR* FSDirectory.unprotectedDelete: /foo/file1 is removed
2011-08-09 20:44:19,068 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [2, 0, 0, 0, 2, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 54, 53]
2011-08-09 20:44:19,068 DEBUG namenode.FSNamesystem (FSEditLog.java:write(200)) - Transaction written: [2, 0, 0, 0, 2, 0, 10, 47, 102, 111, 111, 47, 102, 105, 108, 101, 49, 0, 13, 49, 51, 49, 50, 57, 49, 53, 52, 53, 57, 48, 54, 53]
2011-08-09 20:44:19,068 INFO  hdfs.StateChange (FSNamesystem.java:addToInvalidates(1995)) - BLOCK* NameSystem.addToInvalidates: blk_-7143994813129296354 is added to invalidSet of 127.0.0.1:51078
2011-08-09 20:44:19,069 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 37
2011-08-09 20:44:19,070 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 37
2011-08-09 20:44:19,070 INFO  FSNamesystem.audit (FSNamesystem.java:logAuditEvent(136)) - ugi=jeff,jeff	ip=/127.0.0.1	cmd=delete	src=/foo/file1	dst=null	perm=null
Deleted /foo/file1
testFileCreationDeleteParent: Successfulle deleted /foo/file1
2011-08-09 20:44:19,071 WARN  hdfs.DFSClient (DFSClient.java:deleteUsingTrash(323)) - File /foo/file2 is being deleted only through Trash org.apache.hadoop.fs.FsShell.delete because all deletes must go through Trash.
2011-08-09 20:44:19,079 DEBUG hdfs.StateChange (NameNode.java:delete(671)) - *DIR* Namenode.delete: src=/foo/file2, recursive=true
2011-08-09 20:44:19,079 DEBUG hdfs.StateChange (FSNamesystem.java:deleteInternal(2225)) - DIR* NameSystem.delete: /foo/file2
2011-08-09 20:44:19,080 WARN  hdfs.StateChange (FSNamesystem.java:deleteInternal(2234)) - DIR* NameSystem.delete:  Trying to delete a whitelisted path /foo/file2 by user jeff,jeff from server /127.0.0.1
2011-08-09 20:44:19,082 INFO  ipc.Server (Server.java:run(1079)) - IPC Server handler 2 on 37807, call delete(/foo/file2, true) from 127.0.0.1:33373: error: java.io.IOException: Deleting a whitelisted directory is not allowed. /foo/file2
java.io.IOException: Deleting a whitelisted directory is not allowed. /foo/file2
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.deleteInternal(FSNamesystem.java:2238)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.delete(FSNamesystem.java:2204)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.delete(NameNode.java:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:631)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1070)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1066)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:1064)
testFileCreationDeleteParent: Unable to  deleted /foo/file2 as expected
2011-08-09 20:44:19,084 DEBUG hdfs.StateChange (NameNode.java:rename(649)) - *DIR* NameNode.rename: /foo/file2 to /foo/file1
2011-08-09 20:44:19,089 DEBUG hdfs.StateChange (FSNamesystem.java:renameToInternal(2161)) - DIR* NameSystem.renameTo: /foo/file2 to /foo/file1
2011-08-09 20:44:19,089 WARN  hdfs.StateChange (FSNamesystem.java:renameToInternal(2178)) - DIR* NameSystem.delete:  Trying to rename a whitelisted path /foo/file2 by user jeff,jeff from server /127.0.0.1
2011-08-09 20:44:19,090 INFO  ipc.Server (Server.java:run(1079)) - IPC Server handler 4 on 37807, call rename(/foo/file2, /foo/file1) from 127.0.0.1:33373: error: java.io.IOException: Rename a whitelisted directory is not allowed /foo/file2
java.io.IOException: Rename a whitelisted directory is not allowed /foo/file2
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.renameToInternal(FSNamesystem.java:2182)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.renameTo(FSNamesystem.java:2146)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.rename(NameNode.java:654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:631)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1070)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1066)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:1064)
testFileCreationDeleteParent: Unable to rename /foo/file2 as expected
Shutting down the Mini HDFS Cluster
Shutting down DataNode 0
2011-08-09 20:44:19,135 INFO  mortbay.log (Slf4jLog.java:info(67)) - Stopped SelectChannelConnector@localhost:0
2011-08-09 20:44:19,136 INFO  ipc.Server (Server.java:stop(1226)) - Stopping server on 56201
2011-08-09 20:44:19,136 INFO  ipc.Server (Server.java:run(447)) - Stopping IPC Server listener on 56201
2011-08-09 20:44:19,137 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 2 on 56201: exiting
2011-08-09 20:44:19,136 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 1 on 56201: exiting
2011-08-09 20:44:19,137 INFO  ipc.Server (Server.java:run(646)) - Stopping IPC Server Responder
2011-08-09 20:44:19,138 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 0 on 56201: exiting
2011-08-09 20:44:19,138 WARN  datanode.DataNode (DataXceiverServer.java:run(138)) - DatanodeRegistration(127.0.0.1:51078, storageID=DS-1460672559-10.0.62.238-51078-1312915458782, infoPort=46064, ipcPort=56201):DataXceiveServer: java.nio.channels.AsynchronousCloseException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:185)
	at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:152)
	at sun.nio.ch.ServerSocketAdaptor.accept(ServerSocketAdaptor.java:84)
	at org.apache.hadoop.hdfs.server.datanode.DataXceiverServer.run(DataXceiverServer.java:131)
	at java.lang.Thread.run(Thread.java:662)

2011-08-09 20:44:19,138 INFO  datanode.DataNode (DataNode.java:shutdown(632)) - Waiting for threadgroup to exit, active threads is 1
2011-08-09 20:44:19,140 INFO  datanode.DataBlockScanner (DataBlockScanner.java:run(604)) - Exiting DataBlockScanner thread.
2011-08-09 20:44:19,141 INFO  datanode.DataNode (DataNode.java:run(1294)) - DatanodeRegistration(127.0.0.1:51078, storageID=DS-1460672559-10.0.62.238-51078-1312915458782, infoPort=46064, ipcPort=56201):Finishing DataNode in: FSDataset{dirpath='/home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data1/current,/home/jeff/hadoop-20-warehouse/build/test/data/dfs/data/data2/current'}
2011-08-09 20:44:19,141 INFO  ipc.Server (Server.java:stop(1226)) - Stopping server on 56201
2011-08-09 20:44:19,141 INFO  datanode.DataNode (DataNode.java:shutdown(632)) - Waiting for threadgroup to exit, active threads is 0
2011-08-09 20:44:19,142 INFO  datanode.FSDatasetAsyncDiskService (FSDatasetAsyncDiskService.java:shutdown(128)) - Shutting down all async disk service threads...
2011-08-09 20:44:19,142 INFO  datanode.FSDatasetAsyncDiskService (FSDatasetAsyncDiskService.java:shutdown(137)) - All async disk service threads have been shut down.
2011-08-09 20:44:19,142 WARN  datanode.FSDatasetAsyncDiskService (FSDatasetAsyncDiskService.java:shutdown(125)) - AsyncDiskService has already shut down.
2011-08-09 20:44:19,144 INFO  mortbay.log (Slf4jLog.java:info(67)) - Stopped SelectChannelConnector@localhost:0
2011-08-09 20:44:19,244 DEBUG namenode.FSNamesystem (PendingReplicationBlocks.java:run(188)) - PendingReplicationMonitor thread received exception. java.lang.InterruptedException: sleep interrupted
2011-08-09 20:44:19,245 WARN  namenode.FSNamesystem (FSNamesystem.java:run(3042)) - ReplicationMonitor thread received InterruptedException.java.lang.InterruptedException: sleep interrupted
2011-08-09 20:44:19,245 INFO  namenode.DecommissionManager (DecommissionManager.java:waitForWork(254)) - Interrupted Monitor
java.lang.InterruptedException
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.hadoop.hdfs.server.namenode.DecommissionManager$Monitor.waitForWork(DecommissionManager.java:244)
	at org.apache.hadoop.hdfs.server.namenode.DecommissionManager$Monitor.run(DecommissionManager.java:267)
	at java.lang.Thread.run(Thread.java:662)
2011-08-09 20:44:19,246 INFO  namenode.FSNamesystem (FSEditLog.java:printStatistics(1125)) - Number of transactions: 8 Total time for transactions(ms): 3 Number of transactions batched in Syncs: 0 Number of syncs: 5 SyncTimes(ms):  /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name1/current/edits:8  /home/jeff/hadoop-20-warehouse/build/test/data/dfs/name2/current/edits:6 
2011-08-09 20:44:19,246 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 1
2011-08-09 20:44:19,247 DEBUG namenode.FSNamesystem (FSEditLog.java:flushAndSync(261)) - Flushing buffer of size: 1
2011-08-09 20:44:19,248 INFO  ipc.Server (Server.java:stop(1226)) - Stopping server on 37807
2011-08-09 20:44:19,249 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 0 on 37807: exiting
2011-08-09 20:44:19,249 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 1 on 37807: exiting
2011-08-09 20:44:19,249 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 2 on 37807: exiting
2011-08-09 20:44:19,249 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 3 on 37807: exiting
2011-08-09 20:44:19,250 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 9 on 37807: exiting
2011-08-09 20:44:19,250 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 8 on 37807: exiting
2011-08-09 20:44:19,250 INFO  ipc.Server (Server.java:run(447)) - Stopping IPC Server listener on 37807
2011-08-09 20:44:19,251 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 7 on 37807: exiting
2011-08-09 20:44:19,251 INFO  ipc.Server (Server.java:run(646)) - Stopping IPC Server Responder
2011-08-09 20:44:19,251 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 5 on 37807: exiting
2011-08-09 20:44:19,251 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 4 on 37807: exiting
2011-08-09 20:44:19,252 INFO  ipc.Server (Server.java:run(1110)) - IPC Server handler 6 on 37807: exiting
------------- ---------------- ---------------

Testcase: testFileDeleteWhiteList took 54.858 sec
